name: terraform plan amd apply
on:
  pull_request:
  push:
    branches:
      - main
env:
  AWS_REGION : "ap-northeast-1"
permissions:
  id-token: write
  contents: read
jobs:
  determine-workdir:
    runs-on: ubuntu-latest
    permissions:
      pull-requests: read
      contents: read
    outputs:
      workdirs: ${{ steps.filter.outputs.workdirs }}
    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - uses: dorny/paths-filter@de90cc6fb38fc0963ad72b210f1f284cd68cea36 # v3.0.2
        id: changes
        with:
          filters: .github/path-filter.yml

      - name: filter
        id: filter
        run: |
          WORKDIRS=$(echo '${{ toJSON(steps.changes.outputs) }}' | jq '. | to_entries[] | select(.value == "true") | .key') 
          echo "workdirs=$(echo $WORKDIRS | jq -sc '.')" >> $GITHUB_OUTPUT

  plan-and-apply:
    runs-on: ubuntu-latest
    needs: determine-workdir
    if: needs.determine-workdir.outputs.workdirs != '[]'
    strategy:
      fail-fast: false
      matrix:
        workdir: ${{ fromJSON(needs.determine-workdir.outputs.workdirs) }}
    outputs:
      matrix-results: ${{ steps.plan-result.outputs.matrix-status }}
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - name: Set environment variables for each env
        run: |
          ENV=$(echo "${{ matrix.workdir }}" | cut -d '/' -f1)
          yq "with_entries(select(.key == \"$ENV\")) | .$ENV" .github/path-to-account-map.yml -o props | tr -d " " >> $GITHUB_ENV
      - name: Configure aws credentials
        uses: aws-actions/configure-aws-credentials@e3dd6a429d7300a6a4c196c26e071d42e0343502 # v4.0.2
        with:
          role-to-assume: arn:aws:iam::${{ secrets[env.AWS_ACCOUNT_ID] }}:role/github_actions_plan
          role-session-name: PlanSession
          aws-region: ${{ env.AWS_REGION }}
      - name: Setup terraform
        uses: hashicorp/setup-terraform@b9cd54a3c349d3f38e8881555d616ced269862dd # v3.1.2
        with:
          terraform_version: "1.9.8"
      - name: Terraform init
        run: terraform init
        working-directory: ${{ matrix.workdir }}
      - name: Terraform plan
        run: terraform plan
        working-directory: ${{ matrix.workdir }}
      - name: Configure aws credentials
        if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' }}
        uses: aws-actions/configure-aws-credentials@e3dd6a429d7300a6a4c196c26e071d42e0343502 # v4.0.2
        with:
          role-to-assume: arn:aws:iam::${{ secrets[env.AWS_ACCOUNT_ID] }}:role/github_actions_apply
          role-session-name: ApplySession
          aws-region: ${{ env.AWS_REGION }}
      - name: Terraform Apply
        if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' }}
        run: terraform apply -auto-approve
        working-directory: ${{ matrix.workdir }}
  post-terraform:
    name: All jobs passed
    needs: [determine-workdir, plan-and-apply]
    runs-on: ubuntu-latest
    steps:
      - run: echo ok
